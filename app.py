import pandas as pd
import pickle
from flask import Flask, request, jsonify

app = Flask(__name__)

# Charger le modèle
model = pickle.load(open("app/model/best_model.pkl", "rb"))

# Liste des features attendues
expected_features = ['APP_CODE_GENDER', 'APP_FLAG_OWN_CAR', 'APP_FLAG_OWN_REALTY', 'APP_CNT_CHILDREN', 'APP_AMT_INCOME_TOTAL', 'APP_AMT_CREDIT', 'APP_AMT_ANNUITY', 'APP_AMT_GOODS_PRICE', 'APP_REGION_POPULATION_RELATIVE', 'APP_DAYS_BIRTH', 'APP_DAYS_EMPLOYED', 'APP_DAYS_REGISTRATION', 'APP_DAYS_ID_PUBLISH', 'APP_FLAG_MOBIL', 'APP_FLAG_EMP_PHONE', 'APP_FLAG_WORK_PHONE', 'APP_FLAG_CONT_MOBILE', 'APP_FLAG_PHONE', 'APP_FLAG_EMAIL', 'APP_CNT_FAM_MEMBERS', 'APP_REGION_RATING_CLIENT', 'APP_REGION_RATING_CLIENT_W_CITY', 'APP_HOUR_APPR_PROCESS_START', 'APP_REG_REGION_NOT_LIVE_REGION', 'APP_REG_REGION_NOT_WORK_REGION', 'APP_LIVE_REGION_NOT_WORK_REGION', 'APP_REG_CITY_NOT_LIVE_CITY', 'APP_REG_CITY_NOT_WORK_CITY', 'APP_LIVE_CITY_NOT_WORK_CITY', 'APP_EXT_SOURCE_2', 'APP_EXT_SOURCE_3', 'APP_YEARS_BEGINEXPLUATATION_AVG', 'APP_FLOORSMAX_AVG', 'APP_LIVINGAREA_AVG', 'APP_YEARS_BEGINEXPLUATATION_MODE', 'APP_FLOORSMAX_MODE', 'APP_LIVINGAREA_MODE', 'APP_YEARS_BEGINEXPLUATATION_MEDI', 'APP_FLOORSMAX_MEDI', 'APP_LIVINGAREA_MEDI', 'APP_TOTALAREA_MODE', 'APP_OBS_30_CNT_SOCIAL_CIRCLE', 'APP_DEF_30_CNT_SOCIAL_CIRCLE', 'APP_OBS_60_CNT_SOCIAL_CIRCLE', 'APP_DEF_60_CNT_SOCIAL_CIRCLE', 'APP_DAYS_LAST_PHONE_CHANGE', 'APP_FLAG_DOCUMENT_2', 'APP_FLAG_DOCUMENT_3', 'APP_FLAG_DOCUMENT_4', 'APP_FLAG_DOCUMENT_5', 'APP_FLAG_DOCUMENT_6', 'APP_FLAG_DOCUMENT_7', 'APP_FLAG_DOCUMENT_8', 'APP_FLAG_DOCUMENT_9', 'APP_FLAG_DOCUMENT_10', 'APP_FLAG_DOCUMENT_11', 'APP_FLAG_DOCUMENT_12', 'APP_FLAG_DOCUMENT_13', 'APP_FLAG_DOCUMENT_14', 'APP_FLAG_DOCUMENT_15', 'APP_FLAG_DOCUMENT_16', 'APP_FLAG_DOCUMENT_17', 'APP_FLAG_DOCUMENT_18', 'APP_FLAG_DOCUMENT_19', 'APP_FLAG_DOCUMENT_20', 'APP_FLAG_DOCUMENT_21', 'APP_AMT_REQ_CREDIT_BUREAU_HOUR', 'APP_AMT_REQ_CREDIT_BUREAU_DAY', 'APP_AMT_REQ_CREDIT_BUREAU_WEEK', 'APP_AMT_REQ_CREDIT_BUREAU_MON', 'APP_AMT_REQ_CREDIT_BUREAU_QRT', 'APP_AMT_REQ_CREDIT_BUREAU_YEAR', 'APP_NAME_CONTRACT_TYPE_Cash_loans', 'APP_NAME_CONTRACT_TYPE_Revolving_loans', 'APP_NAME_CONTRACT_TYPE_nan', 'APP_NAME_TYPE_SUITE_Children', 'APP_NAME_TYPE_SUITE_Family', 'APP_NAME_TYPE_SUITE_Group_of_people', 'APP_NAME_TYPE_SUITE_Other_A', 'APP_NAME_TYPE_SUITE_Other_B', 'APP_NAME_TYPE_SUITE_Spouse__partner', 'APP_NAME_TYPE_SUITE_Unaccompanied', 'APP_NAME_TYPE_SUITE_nan', 'APP_NAME_INCOME_TYPE_Businessman', 'APP_NAME_INCOME_TYPE_Commercial_associate', 'APP_NAME_INCOME_TYPE_Maternity_leave', 'APP_NAME_INCOME_TYPE_Pensioner', 'APP_NAME_INCOME_TYPE_State_servant', 'APP_NAME_INCOME_TYPE_Student', 'APP_NAME_INCOME_TYPE_Unemployed', 'APP_NAME_INCOME_TYPE_Working', 'APP_NAME_INCOME_TYPE_nan', 'APP_NAME_EDUCATION_TYPE_Academic_degree', 'APP_NAME_EDUCATION_TYPE_Higher_education', 'APP_NAME_EDUCATION_TYPE_Incomplete_higher', 'APP_NAME_EDUCATION_TYPE_Lower_secondary', 'APP_NAME_EDUCATION_TYPE_Secondary___secondary_special', 'APP_NAME_EDUCATION_TYPE_nan', 'APP_NAME_FAMILY_STATUS_Civil_marriage', 'APP_NAME_FAMILY_STATUS_Married', 'APP_NAME_FAMILY_STATUS_Separated', 'APP_NAME_FAMILY_STATUS_Single___not_married', 'APP_NAME_FAMILY_STATUS_Unknown', 'APP_NAME_FAMILY_STATUS_Widow', 'APP_NAME_FAMILY_STATUS_nan', 'APP_NAME_HOUSING_TYPE_Co_op_apartment', 'APP_NAME_HOUSING_TYPE_House___apartment', 'APP_NAME_HOUSING_TYPE_Municipal_apartment', 'APP_NAME_HOUSING_TYPE_Office_apartment', 'APP_NAME_HOUSING_TYPE_Rented_apartment', 'APP_NAME_HOUSING_TYPE_With_parents', 'APP_NAME_HOUSING_TYPE_nan', 'APP_OCCUPATION_TYPE_Accountants', 'APP_OCCUPATION_TYPE_Cleaning_staff', 'APP_OCCUPATION_TYPE_Cooking_staff', 'APP_OCCUPATION_TYPE_Core_staff', 'APP_OCCUPATION_TYPE_Drivers', 'APP_OCCUPATION_TYPE_HR_staff', 'APP_OCCUPATION_TYPE_High_skill_tech_staff', 'APP_OCCUPATION_TYPE_IT_staff', 'APP_OCCUPATION_TYPE_Laborers', 'APP_OCCUPATION_TYPE_Low_skill_Laborers', 'APP_OCCUPATION_TYPE_Managers', 'APP_OCCUPATION_TYPE_Medicine_staff', 'APP_OCCUPATION_TYPE_Private_service_staff', 'APP_OCCUPATION_TYPE_Realty_agents', 'APP_OCCUPATION_TYPE_Sales_staff', 'APP_OCCUPATION_TYPE_Secretaries', 'APP_OCCUPATION_TYPE_Security_staff', 'APP_OCCUPATION_TYPE_Waiters_barmen_staff', 'APP_OCCUPATION_TYPE_nan', 'APP_WEEKDAY_APPR_PROCESS_START_FRIDAY', 'APP_WEEKDAY_APPR_PROCESS_START_MONDAY', 'APP_WEEKDAY_APPR_PROCESS_START_SATURDAY', 'APP_WEEKDAY_APPR_PROCESS_START_SUNDAY', 'APP_WEEKDAY_APPR_PROCESS_START_THURSDAY', 'APP_WEEKDAY_APPR_PROCESS_START_TUESDAY', 'APP_WEEKDAY_APPR_PROCESS_START_WEDNESDAY', 'APP_WEEKDAY_APPR_PROCESS_START_nan', 'APP_ORGANIZATION_TYPE_Advertising', 'APP_ORGANIZATION_TYPE_Agriculture', 'APP_ORGANIZATION_TYPE_Bank', 'APP_ORGANIZATION_TYPE_Business_Entity_Type_1', 'APP_ORGANIZATION_TYPE_Business_Entity_Type_2', 'APP_ORGANIZATION_TYPE_Business_Entity_Type_3', 'APP_ORGANIZATION_TYPE_Cleaning', 'APP_ORGANIZATION_TYPE_Construction', 'APP_ORGANIZATION_TYPE_Culture', 'APP_ORGANIZATION_TYPE_Electricity', 'APP_ORGANIZATION_TYPE_Emergency', 'APP_ORGANIZATION_TYPE_Government', 'APP_ORGANIZATION_TYPE_Hotel', 'APP_ORGANIZATION_TYPE_Housing', 'APP_ORGANIZATION_TYPE_Industry__type_1', 'APP_ORGANIZATION_TYPE_Industry__type_10', 'APP_ORGANIZATION_TYPE_Industry__type_11', 'APP_ORGANIZATION_TYPE_Industry__type_12', 'APP_ORGANIZATION_TYPE_Industry__type_13', 'APP_ORGANIZATION_TYPE_Industry__type_2', 'APP_ORGANIZATION_TYPE_Industry__type_3', 'APP_ORGANIZATION_TYPE_Industry__type_4', 'APP_ORGANIZATION_TYPE_Industry__type_5', 'APP_ORGANIZATION_TYPE_Industry__type_6', 'APP_ORGANIZATION_TYPE_Industry__type_7', 'APP_ORGANIZATION_TYPE_Industry__type_8', 'APP_ORGANIZATION_TYPE_Industry__type_9', 'APP_ORGANIZATION_TYPE_Insurance', 'APP_ORGANIZATION_TYPE_Kindergarten', 'APP_ORGANIZATION_TYPE_Legal_Services', 'APP_ORGANIZATION_TYPE_Medicine', 'APP_ORGANIZATION_TYPE_Military', 'APP_ORGANIZATION_TYPE_Mobile', 'APP_ORGANIZATION_TYPE_Other', 'APP_ORGANIZATION_TYPE_Police', 'APP_ORGANIZATION_TYPE_Postal', 'APP_ORGANIZATION_TYPE_Realtor', 'APP_ORGANIZATION_TYPE_Religion', 'APP_ORGANIZATION_TYPE_Restaurant', 'APP_ORGANIZATION_TYPE_School', 'APP_ORGANIZATION_TYPE_Security', 'APP_ORGANIZATION_TYPE_Security_Ministries', 'APP_ORGANIZATION_TYPE_Self_employed', 'APP_ORGANIZATION_TYPE_Services', 'APP_ORGANIZATION_TYPE_Telecom', 'APP_ORGANIZATION_TYPE_Trade__type_1', 'APP_ORGANIZATION_TYPE_Trade__type_2', 'APP_ORGANIZATION_TYPE_Trade__type_3', 'APP_ORGANIZATION_TYPE_Trade__type_4', 'APP_ORGANIZATION_TYPE_Trade__type_5', 'APP_ORGANIZATION_TYPE_Trade__type_6', 'APP_ORGANIZATION_TYPE_Trade__type_7', 'APP_ORGANIZATION_TYPE_Transport__type_1', 'APP_ORGANIZATION_TYPE_Transport__type_2', 'APP_ORGANIZATION_TYPE_Transport__type_3', 'APP_ORGANIZATION_TYPE_Transport__type_4', 'APP_ORGANIZATION_TYPE_University', 'APP_ORGANIZATION_TYPE_XNA', 'APP_ORGANIZATION_TYPE_nan', 'APP_FONDKAPREMONT_MODE_not_specified', 'APP_FONDKAPREMONT_MODE_org_spec_account', 'APP_FONDKAPREMONT_MODE_reg_oper_account', 'APP_FONDKAPREMONT_MODE_reg_oper_spec_account', 'APP_FONDKAPREMONT_MODE_nan', 'APP_HOUSETYPE_MODE_block_of_flats', 'APP_HOUSETYPE_MODE_specific_housing', 'APP_HOUSETYPE_MODE_terraced_house', 'APP_HOUSETYPE_MODE_nan', 'APP_WALLSMATERIAL_MODE_Block', 'APP_WALLSMATERIAL_MODE_Mixed', 'APP_WALLSMATERIAL_MODE_Monolithic', 'APP_WALLSMATERIAL_MODE_Others', 'APP_WALLSMATERIAL_MODE_Panel', 'APP_WALLSMATERIAL_MODE_Stone__brick', 'APP_WALLSMATERIAL_MODE_Wooden', 'APP_WALLSMATERIAL_MODE_nan', 'APP_EMERGENCYSTATE_MODE_No', 'APP_EMERGENCYSTATE_MODE_Yes', 'APP_EMERGENCYSTATE_MODE_nan', 'APP_NEW_DAYS_EMPLOYED_PERC', 'APP_NEW_INCOME_CREDIT_PERC', 'APP_NEW_INCOME_PER_PERSON', 'APP_NEW_ANNUITY_INCOME_PERC', 'APP_NEW_PAYMENT_RATE', 'APP_NEW_CREDIT_INCOME_RATIO', 'APP_NEW_ANNUITY_INCOME_RATIO', 'APP_NEW_AGE_EMPLOYED_RATIO', 'BUREAU_DAYS_CREDIT_MIN', 'BUREAU_DAYS_CREDIT_MAX', 'BUREAU_DAYS_CREDIT_MEAN', 'BUREAU_CREDIT_DAY_OVERDUE_SUM', 'BUREAU_CREDIT_DAY_OVERDUE_MEAN', 'BUREAU_AMT_CREDIT_SUM_SUM', 'BUREAU_AMT_CREDIT_SUM_MEAN', 'BUREAU_AMT_CREDIT_SUM_DEBT_SUM', 'BUREAU_AMT_CREDIT_SUM_DEBT_MEAN', 'BUREAU_AMT_CREDIT_SUM_OVERDUE_SUM', 'BUREAU_AMT_CREDIT_SUM_OVERDUE_MEAN', 'NEW_DEBT_RATIO', 'NEW_CREDIT_DEBT_DIFF']



@app.route("/", methods=["GET"])
def home():
    return "L'API fonctionne !"

@app.route("/predict", methods=["POST"])
def predict():
    try:
        # Récupérer les données envoyées par l'utilisateur
        data = request.get_json()

        # Vérifier que data est bien un dictionnaire
        if not isinstance(data, dict):
            return jsonify({"error": "Invalid input format, expected JSON object"}), 400

        # Compléter les features manquantes avec une valeur neutre (0 ou moyenne)
        complete_data = {feature: data.get(feature, 0) for feature in expected_features}

        # Transformer en DataFrame avec les bonnes colonnes
        df = pd.DataFrame([complete_data])

        # Faire la prédiction
        prediction = model.predict(df)[0]

        return jsonify({"prediction": float(prediction)})

    except Exception as e:
        return jsonify({"error": str(e)}), 500
